#!/bin/sh
#
#      -*- OpenSAF  -*-
#
# (C) Copyright 2009 The OpenSAF Foundation
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. This file and program are licensed
# under the GNU Lesser General Public License Version 2.1, February 1999.
# The complete license can be accessed from the following location:
# http://opensource.org/licenses/lgpl-license.php
# See the Copying file included with the OpenSAF distribution for full
# licensing terms.
#
# Author(s): Emerson Network Power
#

. /etc/opensaf/osafdir.conf

# NOTE: This script will be customized/replaced accordingly when there's no CLM node to EE mapping in the imm.xml 
# In such cases rebooting would be done through proprietary mechanisms, i.e. not through PLM.
# Node_id is (the only entity) at the disposal of any proprietary mechanism.
#
# All TIPC bearers are disabled before forced reboot in order to improve controller
# fail over times.

NODE_ID_FILE=$pkglocalstatedir/node_id
node_id=$1
ee_name=$2

tipc_config=`which tipc-config 2> /dev/null`
test $? -ne 0 && tipc_config="/bin/true"

# Run commands through sudo when not superuser
test $(id -u) -ne 0 && icmd=$(which sudo 2> /dev/null)

#if plm exists in the system,then the reboot is performed using the eename.
opensaf_reboot_with_plm()
{
         
	immadm -o 7 $ee_name
	retval=$?
	if [ $retval != 0 ]; then
		if [ "$self_node_id" = "$node_id" ];then
			sudo $tipc_config "-bd=?"
			sudo /sbin/reboot -f
		else
			logger -t "opensaf_reboot" "Rebooting remote node failed"
			exit 1
		fi
	fi 
#Note: Operation Id SA_PLM_ADMIN_RESTART=7
#No Parameter option specified, which signifies gracefull reboot
#In the example the $ee_name would expand to (for eg:-) safEE=my_linux_os,safHE=64bitmulticore,safDomain=my_domain
}


if ! test -f "$NODE_ID_FILE"; then
	logger -t "opensaf_reboot" "$NODE_ID_FILE doesnt exists,reboot failed "
	exit 1
fi

temp_node_id=`cat "$NODE_ID_FILE"`
temp_node_id=`echo "$temp_node_id" |sed -e 's:^0[bBxX]::'| sed -e 's:^:0x:'`
self_node_id=`printf "%d" $temp_node_id`

# A node ID of zero(0) means an order to reboot the local node
if [ "$self_node_id" = "$node_id" ] || [ $node_id = 0 ]; then
	# uncomment the following line if debugging errors that keep restarting the node
	# exit 0

        logger -t "opensaf_reboot" "Rebooting local node"

# On systems with faster processor (16 core), even with "reboot -f" in place in opensaf_reboot script,
# FMD process on the same node gets enough time to kill the other controller due to getting TIPC link down
# resulted due to tipc bearer disable. Hence killing the processes amfnd, amfd and fmd before invoking
# TIPC bearer disable and reboot -f. FMD is killed so that it will not act on TIPC link down and AMFD/AMFND
# are killed so that FMD will not be respawned.
	$icmd pkill osafamfd
	$icmd pkill osafamfnd
	$icmd pkill osaffmd

	$icmd $tipc_config "-bd=?"
	$icmd /sbin/reboot -f
else
	if [ ":$ee_name" != ":" ]; then
		plm_node_state=`immlist $ee_name |grep saPlmEEAdminState|awk '{print $3}'` 
		if [ $plm_node_state != 2 ]; then
			opensaf_reboot_with_plm
		else	
			logger -t "opensaf_reboot" "Not rebooting remote node $ee_name as it is already in locked state"
		fi
	else
        	logger -t "opensaf_reboot" "Rebooting remote node in the absence of PLM is outside the scope of OpenSAF"
	fi	
fi	
