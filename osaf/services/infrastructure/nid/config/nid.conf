# This file contains low level global configuration for OpenSAF
# Please read

# /etc/init.d NID values, do not edit unless you know what you are doing
NID_MAGIC=AAB49DAA
NIDFIFO=$pkglocalstatedir/nodeinit.fifo
DAEMON_STARTED=1
DAEMON_START_FAILED=2
DAEMON_NOT_FND=$DAEMON_START_FAILED

# Set the timeout to a non-zero value to wait for that many secs
# and reboot the node on start failure. Set to 0 if no reboot 
# is required on start failure.
REBOOT_ON_FAIL_TIMEOUT=0

# MDS transport protocol, values supported are TIPC or TCP
export MDS_TRANSPORT=TCP

# This is valid when above MDS_TRANSPORT is set to TIPC 
# Should OpenSAF manage (load kernel module and initialize) TIPC or not
# Note: When user has taken the responsibility to manage TIPC, then before
# starting OpenSAF TIPC has to be configured according to OpenSAF requirements.
# This can be done by (re)using the $pkglibdir/configure_tipc script
# as: $ configure_tipc start <interface name> <TIPC netid>
# For eg:- $ configure_tipc start eth0 9859

export OPENSAF_MANAGE_TIPC="yes"

# This is valid when above MDS_TRANSPORT is set to TIPC and OPENSAF_MANAGE_TIPC is set to "yes" ,
# values supported is the network interface name, e.g. eth3  
TIPC_ETH_IF=eth0
 
# This is valid when above MDS_TRANSPORT is set to TIPC, nd OPENSAF_MANAGE_TIPC is set to "yes",  
# values supported is TIPC netid ,e.g 4711  
TIPC_NET_ID=1234

# Specifies how long "opensafd stop" should wait before stop has considered to fail
OPENSAF_TERMTIMEOUT=60

# Number of seconds before a reboot is escalated to an immediate reboot via the
# SysRq interface /proc/sysrq-trigger.  Comment it out or set it to zero to
# disable this feature.  Note that you must make sure the kernel allows reboot
# via SysRq for this feature to work.
export OPENSAF_REBOOT_TIMEOUT=60

# Specify the UNIX group and user OpenSAF run as
# The below variables have to be changed to "root"
# if user has built OpenSAF to run as root
export OPENSAF_GROUP=opensaf
export OPENSAF_USER=opensaf

