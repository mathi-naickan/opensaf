#!/bin/bash
#      -*- OpenSAF  -*-
#
# (C) Copyright 2008 The OpenSAF Foundation
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. This file and program are licensed
# under the GNU Lesser General Public License Version 2.1, February 1999.
# The complete license can be accessed from the following location:
# http://opensource.org/licenses/lgpl-license.php
# See the Copying file included with the OpenSAF distribution for full
# licensing terms.
#
# Author(s): Emerson Network Power
# Modified by: Andras Kovi (OptXware)
#
# This script instantiates a Java AMF test component with the given name.
#
# Usage:
#      instantiate.sh <main class FQN>

source [PATH_TO_INSTALL]/config/scripts.conf

# PID of the script
SPID="[$$]"

XTERM=
# Use this for debugging
#XTERM="xterm gdb"

# Directory for log files.
LOG_DIR=[PATH_TO_INSTALL]/log
# Time stamp for time stamped logging.
TIME_STAMP=`date`
# The log file for this component.
LOG_FILE=${LOG_DIR}/comp_${SA_AMF_COMPONENT_NAME}.log

JAVA="java"

# Define Java options:
#   SAF_AIS_CLM_IMPL_CLASSNAME: name of the CLM handle implementation class (optional, only required if CLM is used by component)
#   SAF_AIS_CLM_IMPL_URL: url to the CLM handle implmementation class (jar file or the fully qualified path without .class extension)
#   SAF_AIS_AMF_IMPL_CLASSNAME: name of the AMF handle implementation class
#   SAF_AIS_AMF_IMPL_URL: url to the AMF handle implmementation class (jar file or the fully qualified path without .class extension)
#   java.library.path: list of directories for natile library loading
#   nativeLibrary: name of the native library without the lib prefix and the extension / this is specific for the OpenSAF java implementation
JAVA_OPTIONS=" \
	-DSAF_AIS_AMF_IMPL_CLASSNAME=org.opensaf.ais.amf.AmfHandleImpl \
	-DSAF_AIS_AMF_IMPL_URL=file://${AIS_API_JAR} \
	-Djava.library.path=${AIS_API_NATIVE_DIR}
	-DnativeLibrary=java_ais_api_native"

# Define the classpath.
#   1. Path to the AIS API and API implementation files.
#   2. Path to the JUnit library.
JAVACP="-cp ${AIS_API_JAR}:${JUNIT_LIB}"

# Fully qualified name of the java class to be run taken from the command line.
JAVACLASS=$1


# The text printed here will appear in the PCAP or SCAP log.

# Instantiate the component
#echo "$XTERM $JAVA $JAVA_OPTIONS $JAVACP $JAVACLASS 2>&1 >> ${LOG_FILE}"

exec $XTERM $JAVA $JAVA_OPTIONS $JAVACP $JAVACLASS 2>&1 >> ${LOG_FILE} &

# Get the pid
PID=$!
echo "$SPID INSTANTIATED: $SA_AMF_COMPONENT_NAME [$PID]"

# Store the CompName PID mapping (CompName:PID format)
echo "$SA_AMF_COMPONENT_NAME:$PID" >> $COMP_PID_MAP_FILE

exit 0
